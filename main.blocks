<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="nVLglKUOLmkD5TcMMHR[" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="vD=1K`GBD_:yFXB*WfR["><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace CMecanum {" line1="" line2="    export enum Motors {" line3="        //% block=&quot;front left&quot;" line4="        //% block.loc.nl=&quot;links voor&quot;" line5="        frontLeft," line6="        //% block=&quot;front right&quot;" line7="        //% block.loc.nl=&quot;rechts voor&quot;" line8="        frontRight," line9="        //% block=&quot;rear left&quot;" line10="        //% block.loc.nl=&quot;links achter&quot;" line11="        rearLeft," line12="        //% block=&quot;rear right&quot;" line13="        //% block.loc.nl=&quot;rechts achter&quot;" line14="        rearRight" line15="    }" line16="" line17="    export enum Direction {" line18="        // block=&quot;forward&quot;" line19="        // block.loc.nl=&quot;vooruit&quot;" line20="        Forward," line21="        // block=&quot;reverse&quot;" line22="        // block.loc.nl=&quot;achteruit&quot;" line23="        Reverse," line24="        // block=&quot;to the left&quot;" line25="        // block.loc.nl=&quot;naar links&quot;" line26="        Left," line27="        // block=&quot;to the right&quot;" line28="        // block.loc.nl=&quot;naar rechts&quot;" line29="        Right," line30="        // block=&quot;anti clockwise&quot;" line31="        // block.loc.nl=&quot;linksom&quot;" line32="        AClockwise," line33="        // block=&quot;clockwise&quot;" line34="        // block.loc.nl=&quot;rechtsom&quot;" line35="        Clockwise" line36="    }" line37="" line38="    export enum Steer {" line39="        // block=&quot;to the left&quot;" line40="        // block.loc.nl=&quot;naar links&quot;" line41="        Left," line42="        // block=&quot;to the right&quot;" line43="        // block.loc.nl=&quot;naar rechts&quot;" line44="        Right" line45="     }" line46="" line47="    let STEER = 0" line48="" line49="    // swap the motor direction because of the assembly" line50="    let SWAPASM = [false, false, false, false]" line51="" line52="    // swap the motor speed based on the direction" line53="    //              mfl    mfr    mrl    mrr" line54="    let SWAPFRW = [false, false, true , true ]" line55="    let SWAPREV = [true , true , false, false]" line56="    let SWAPLFT = [true , true , true , true ]" line57="    let SWAPRGT = [false, false, false, false]" line58="    let SWAPCLW = [false, true , true , false]" line59="    let SWAPACW = [true , false, false, true ]" line60="" line61="    let MFL = 0" line62="    let MFR = 0" line63="    let MRL = 0" line64="    let MRR = 0" line65="" line66="    //% block=&quot;Swap the assembly of %motor&quot;" line67="    //% block.loc.nl=&quot;Draai de montage van %motor om&quot;" line68="    export function swapDirection(motor: Motors) {" line69="        SWAPASM[motor] = !SWAPASM[motor]" line70="    }" line71="" line72="    //% block=&quot;steer %bend \\% %dir&quot;" line73="    //% block.loc.nl=&quot;stuur %bend \\% %dir&quot;" line74="    //% bend.max=100 bend.min=0" line75="    export function steer(dir: Steer, bend: number) {" line76="        STEER = (dir == Steer.Left ? -bend : bend)" line77="    }" line78="" line79="    //% block=&quot;run %dir at %speed \\%&quot;" line80="    //% block.loc.nl=&quot;rijd %dir met %speed \\% snelheid&quot;" line81="    //% speed.max=100 speed.min=0" line82="    export function setDriving(dir: Direction, speed: number) {" line83="        let swap = [false, false, false, false]" line84="        switch (dir) {" line85="            case Direction.Forward: swap = SWAPFRW; break;" line86="            case Direction.Reverse: swap = SWAPREV; break;" line87="            case Direction.Left: swap = SWAPLFT; break;" line88="            case Direction.Right: swap = SWAPRGT; break;" line89="            case Direction.Clockwise: swap = SWAPCLW; break;" line90="            case Direction.AClockwise: swap = SWAPACW; break;" line91="        }" line92="" line93="        if ((STEER != 0) &amp;&amp; (dir == Direction.Forward || dir == Direction.Reverse)) {" line94="            if (STEER &gt; 0) {" line95="                let steer = speed - speed * STEER / 100" line96="                MFL = (swap[Motors.frontLeft] ? -speed : speed)" line97="                MRL = (swap[Motors.rearLeft] ? -speed : speed)" line98="                MFR = (swap[Motors.frontRight] ? -speed : steer)" line99="                MRR = (swap[Motors.rearRight] ? -speed : steer)" line100="            }" line101="            else {" line102="                let steer2 = speed + speed * STEER / 100" line103="                MFL = (swap[Motors.frontLeft] ? -speed : steer2)" line104="                MRL = (swap[Motors.rearLeft] ? -speed : steer2)" line105="                MFR = (swap[Motors.frontRight] ? -speed : speed)" line106="                MRR = (swap[Motors.rearRight] ? -speed : speed)" line107="            }" line108="        }" line109="        else {" line110="            MFL = (swap[Motors.frontLeft] ? -speed : speed)" line111="            MRL = (swap[Motors.rearLeft] ? -speed : speed)" line112="            MFR = (swap[Motors.frontRight] ? -speed : speed)" line113="            MRR = (swap[Motors.rearRight] ? -speed : speed)" line114="        }" line115="" line116="        if (SWAPASM[Motors.frontLeft]) MFL = -MFL" line117="        if (SWAPASM[Motors.frontRight]) MFR = -MFR" line118="        if (SWAPASM[Motors.rearLeft]) MRL = -MRL" line119="        if (SWAPASM[Motors.rearRight]) MRR = -MRR" line120="    }" line121="" line122="    //% block=&quot;speed front left wheel&quot;" line123="    //% block.loc.nl=&quot;snelheid linker voorwiel&quot;" line124="    export function frontLeft(): number {" line125="        return MFL" line126="    }" line127="" line128="    //% block=&quot;speed front right wheel&quot;" line129="    //% block.loc.nl=&quot;snelheid rechter voorwiel&quot;" line130="    export function frontRight(): number {" line131="        return MFR" line132="    }" line133="" line134="    //% block=&quot;speed rear left wheel&quot;" line135="    //% block.loc.nl=&quot;snelheid linker achterwiel&quot;" line136="    export function rearLeft(): number {" line137="        return MRL" line138="    }" line139="" line140="    //% block=&quot;speed rear right wheel&quot;" line141="    //% block.loc.nl=&quot;snelheid rechter achterwiel&quot;" line142="    export function rearRight(): number {" line143="        return MRR" line144="    }" line145="}" numlines="146"></mutation></block></statement></block></xml>
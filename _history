{"entries":[{"timestamp":1752674838072,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":185,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":49,"diffs":[[1,""]]},{"start1":1,"length1":2710,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":240,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]}]},{"timestamp":1752675437812,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2113,"length1":28,"diffs":[[1,"        //% block=\"Motor 1\"\n"]]},{"start1":2153,"length1":28,"diffs":[[1,"        //% block=\"Motor 2\"\n"]]},{"start1":2193,"length1":28,"diffs":[[1,"        //% block=\"Motor 3\"\n"]]},{"start1":2233,"length1":28,"diffs":[[1,"        //% block=\"Motor 4\"\n"]]},{"start1":2279,"length1":47,"diffs":[[1,"    expor\n"]]},{"start1":2290,"length1":0,"diffs":[[1,"    let MDIR = []\n\n"]]},{"start1":2446,"length1":44,"diffs":[[1,""]]},{"start1":2751,"length1":230,"diffs":[[1,"      }\n"]]}]}]},{"timestamp":1752676035062,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":0,"diffs":[[1,"namespace neZha {\n    const neZha_address = 0x10\n\n    export enum Motors {\n        //% block=\"M1\"\n        M1,\n        //% block=\"M2\"\n        M2,\n        //% block=\"M3\"\n        M3,\n        //% block=\"M4\"\n        M4\n    }\n\n    // speed.min=-100 speed.max=100\n    export function setMotorSpeed(motor: Motors, speed: number): void {\n        let iic_buffer = pins.createBuffer(4);\n        if (speed > 100) {\n            speed = 100\n        }\n        else if (speed < -100) {\n            speed = -100\n        }\n        switch (motor) {\n            case Motors.M1:\n                iic_buffer[0] = 0x01;\n                if (speed >= 0) {\n                    iic_buffer[1] = 0x01;\n                }\n                else {\n                    iic_buffer[1] = 0x02;\n                    speed = speed * -1\n                }\n                iic_buffer[2] = speed;\n                iic_buffer[3] = 0;\n                pins.i2cWriteBuffer(neZha_address, iic_buffer);\n                break;\n            case Motors.M2:\n                iic_buffer[0] = 0x02;\n                if (speed >= 0) {\n                    iic_buffer[1] = 0x01;\n                }\n                else {\n                    iic_buffer[1] = 0x02;\n                    speed = speed * -1\n                }\n                iic_buffer[2] = speed;\n                iic_buffer[3] = 0;\n                pins.i2cWriteBuffer(neZha_address, iic_buffer);\n                break;\n            case Motors.M3:\n                iic_buffer[0] = 0x03;\n                if (speed >= 0) {\n                    iic_buffer[1] = 0x01;\n                }\n                else {\n                    iic_buffer[1] = 0x02;\n                    speed = speed * -1\n                }\n                iic_buffer[2] = speed;\n                iic_buffer[3] = 0;\n                pins.i2cWriteBuffer(neZha_address, iic_buffer);\n                break;\n            case Motors.M4:\n              break;\n            default:\n                break;\n        }\n    }\n}\n\n"]]},{"start1":2088,"length1":358,"diffs":[[1,""]]},{"start1":3015,"length1":218,"diffs":[[1,"    export function drive()\n"]]}]}]},{"timestamp":1752676569397,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":500,"length1":69,"diffs":[[1,"        //% block=\"motor 1\"\n"]]},{"start1":540,"length1":71,"diffs":[[1,"        //% block=\"motor 2\"\n"]]},{"start1":580,"length1":70,"diffs":[[1,"        //% block=\"motor 3\"\n"]]},{"start1":620,"length1":72,"diffs":[[1,"        //% block=\"motor 4\"\n"]]},{"start1":713,"length1":69,"diffs":[[1,""]]},{"start1":714,"length1":98,"diffs":[[1,"    function driveMotor(motor: Motors, speed: number) {\n        let iic_buffer = pins.createBuffer(4);\n        let neZha_address = 0x10\n\n        if (SWAPDIR[motor]) speed = -speed\n\n        iic_buffer[0] = motor + 1;\n        if (speed >= 0) {\n            iic_buffer[1] = 0x01;\n        }\n        else {\n            iic_buffer[1] = 0x02;\n            speed = -speed\n        }\n        iic_buffer[2] = speed;\n        iic_buffer[3] = 0;\n        pins.i2cWriteBuffer(neZha_address, iic_buffer);\n    }\n\n    //% block=\"Swap direction of %motor\"\n    //% block.loc.nl=\"Draai de richting om van %motor\"\n"]]},{"start1":1402,"length1":279,"diffs":[[1,"    //% block=\"run %dir at %speed %% while bending %bend \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed %% snelheid en buig %bend \\\\% af\"\n    export function drive(dir: Direction, speed: number, bend: number) {\n"]]},{"start1":1620,"length1":56,"diffs":[[1,""]]}]}]},{"timestamp":1752677168615,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1476,"length1":162,"diffs":[[1,"        \n"]]}]}]},{"timestamp":1752677358048,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":2,"length1":27,"diffs":[[1,"    \"name\": \"pxt-nezha-mecanum\",\n"]]}]}]},{"timestamp":1752678529038,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1617,"length1":0,"diffs":[[1,"        return speed\n"]]}]}]},{"timestamp":1752678564005,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":569,"length1":19,"diffs":[[1,"        M1,\n"]]},{"start1":652,"length1":20,"diffs":[[1,"        M2,\n"]]},{"start1":734,"length1":18,"diffs":[[1,"        M3,\n"]]},{"start1":818,"length1":18,"diffs":[[1,"        M4\n"]]},{"start1":1436,"length1":107,"diffs":[[1,"    export function motor1() : number {\n        let speed : number\n        if (SWAPDIR[Motors.M1])\n"]]},{"start1":1601,"length1":327,"diffs":[[1,"        if (DIR\n"]]},{"start1":1623,"length1":1549,"diffs":[[1,""]]}]}]},{"timestamp":1752679146512,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":455,"length1":188,"diffs":[[1,"        Right\n"]]},{"start1":1773,"length1":32,"diffs":[[1,"                ;\n"]]},{"start1":1854,"length1":73,"diffs":[[1,""]]},{"start1":1872,"length1":45,"diffs":[[1,"            case Direction.Reverse: break;\n"]]},{"start1":1933,"length1":81,"diffs":[[1,""]]},{"start1":2395,"length1":118,"diffs":[[1,"            case Direction.Reverse: break;\n"]]},{"start1":2456,"length1":81,"diffs":[[1,""]]},{"start1":2896,"length1":73,"diffs":[[1,""]]},{"start1":2914,"length1":126,"diffs":[[1,"            case Direction.Reverse: break;\n"]]},{"start1":3322,"length1":32,"diffs":[[1,"                ;\n"]]},{"start1":3421,"length1":199,"diffs":[[1,"            case Direction.Reverse: break;\n"]]},{"start1":3519,"length1":3,"diffs":[[1,"}"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":117,"length1":85,"diffs":[[1,"        \"microphone\": \"*\"\n"]]}]}]},{"timestamp":1752679724173,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":4348,"length1":668,"diffs":[[1,""]]}]}]},{"timestamp":1752680284825,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1834,"length1":38,"diffs":[[1,"            case Direction.Forward:\n"]]},{"start1":4348,"length1":17,"diffs":[[1,""]]},{"start1":4463,"length1":27,"diffs":[[1,"function go() {\n    neZha.setMotorSpeed(neZha.MotorList.M1, CMecanum.frontLeft())\n    neZha.setMotorSpeed(neZha.MotorList.M2, CMecanum.frontRight())\n    neZha.setMotorSpeed(neZha.MotorList.M3, CMecanum.rearLeft())\n    neZha.setMotorSpeed(neZha.MotorList.M4, CMecanum.rearRight())\n}\n"]]},{"start1":4746,"length1":48,"diffs":[[1,"// vooruit\nCMecanum.setDriving(CMecanum.Direction.Forward, 15, 0)\ngo()\n"]]},{"start1":4818,"length1":692,"diffs":[[1,"// stop\nbasic.pause(1000)\nneZha.setMotorSpeed(neZha.MotorList.M1, 0)\nneZha.setMotorSpeed(neZha.MotorList.M2, 0)\nneZha.setMotorSpeed(neZha.MotorList.M3, 0)\nneZha.setMotorSpeed(neZha.MotorList.M4, 0)\n"]]}]}]},{"timestamp":1752680879119,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1085,"length1":72,"diffs":[[1,"    let DIR = Direction.Forward\n    let SPEED = 100\n    let BEND = 0\n"]]},{"start1":1155,"length1":64,"diffs":[[1,"    //% block=\"Swap the assembly of %motor\"\n    //% block.loc.nl=\"Draai de montage van %motor om\"\n    export function swapDirection(motor: Motors) {\n        SWAPDIR[motor] = !SWAPDIR[motor]\n    }\n\n    //% block=\"run %dir at %speed \\\\% while bending %bend \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed \\\\% snelheid en buig %bend \\\\% af\"\n    export function setDriving(dir: Direction, speed: number, bend: number) {\n        DIR = dir\n        SPEED = speed\n        BEND = bend\n    }\n\n    export function frontLeft(): number {\n        let speed: number\n"]]},{"start1":1745,"length1":50,"diffs":[[1,"            speed = -SPEED\n        else\n            speed = SPEED\n        switch (DIR) {\n"]]},{"start1":1913,"length1":42,"diffs":[[1,"            case Direction.Reverse:\n"]]},{"start1":2135,"length1":43,"diffs":[[1,"            case Direction.Clockwise: break;\n"]]},{"start1":2198,"length1":43,"diffs":[[1,"            case Direction.Anticlockwise: break;\n"]]},{"start1":2317,"length1":72,"diffs":[[1,"    export function frontRight(): number {\n        let speed: number\n"]]},{"start1":2426,"length1":88,"diffs":[[1,"            speed = -SPEED\n        else\n            speed = SPEED\n        switch (DIR) {\n            case Direction.Forward:\n"]]},{"start1":2606,"length1":42,"diffs":[[1,"            case Direction.Reverse:\n"]]},{"start1":2814,"length1":43,"diffs":[[1,"            case Direction.Clockwise: break;\n"]]},{"start1":2877,"length1":43,"diffs":[[1,"            case Direction.Anticlockwise: break;\n"]]},{"start1":2996,"length1":72,"diffs":[[1,"    export function rearLeft(): number {\n        let speed: number\n"]]},{"start1":3101,"length1":88,"diffs":[[1,"            speed = -SPEED\n        else\n            speed = SPEED\n        switch (DIR) {\n            case Direction.Forward:\n"]]},{"start1":3281,"length1":42,"diffs":[[1,"            case Direction.Reverse:\n"]]},{"start1":3489,"length1":43,"diffs":[[1,"            case Direction.Clockwise: break;\n"]]},{"start1":3566,"length1":43,"diffs":[[1,"            case Direction.Anticlockwise: break;\n"]]},{"start1":3671,"length1":72,"diffs":[[1,"    export function rearRight(): number {\n        let speed: number\n"]]},{"start1":3778,"length1":88,"diffs":[[1,"            speed = -SPEED\n        else\n            speed = SPEED\n        switch (DIR) {\n            case Direction.Forward:\n"]]},{"start1":3944,"length1":42,"diffs":[[1,"            case Direction.Reverse:\n"]]},{"start1":4166,"length1":43,"diffs":[[1,"            case Direction.Clockwise: break;\n"]]},{"start1":4243,"length1":43,"diffs":[[1,"            case Direction.Anticlockwise: break;\n"]]},{"start1":4347,"length1":423,"diffs":[[1,""]]}]}]},{"timestamp":1752681474952,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1311,"length1":43,"diffs":[[1,"            case Direction.Clockwise:\n"]]},{"start1":1367,"length1":43,"diffs":[[1,"                break;\n            case Direction.Anticlockwise:\n"]]},{"start1":1464,"length1":0,"diffs":[[1,"                break;\n"]]},{"start1":1618,"length1":38,"diffs":[[1,"            case Direction.Forward: break;\n"]]},{"start1":1679,"length1":65,"diffs":[[1,"            case Direction.Reverse: break;\n"]]},{"start1":1754,"length1":23,"diffs":[[1,""]]},{"start1":1764,"length1":20,"diffs":[[1,"        return speed\n"]]},{"start1":1792,"length1":64,"diffs":[[1,"    function mfr(dir: Direction, speed: number, bend: number): number {\n"]]},{"start1":1954,"length1":267,"diffs":[[1,""]]},{"start1":2130,"length1":0,"diffs":[[1,"            case Direction.Left: break;\n                ;\n            case Direction.Right: break;\n                speed = -speed;\n            case Direction.Forward: break;\n                ;\n            case Direction.Reverse: break;\n                speed = -speed;\n"]]},{"start1":2407,"length1":20,"diffs":[[1,"        return speed\n"]]},{"start1":2435,"length1":64,"diffs":[[1,"    function mrl(dir: Direction, speed: number, bend: number): number {\n"]]},{"start1":2595,"length1":43,"diffs":[[1,"            case Direction.Clockwise:\n"]]},{"start1":2665,"length1":43,"diffs":[[1,"                break;\n            case Direction.Anticlockwise:\n"]]},{"start1":2748,"length1":0,"diffs":[[1,"                break;\n"]]},{"start1":2902,"length1":38,"diffs":[[1,"            case Direction.Forward: break;\n"]]},{"start1":2977,"length1":65,"diffs":[[1,"            case Direction.Reverse: break;\n"]]},{"start1":3038,"length1":23,"diffs":[[1,""]]},{"start1":3048,"length1":20,"diffs":[[1,"        return speed\n"]]},{"start1":3076,"length1":64,"diffs":[[1,"    function mrr(dir: Direction, speed: number, bend: number): number {\n"]]},{"start1":3237,"length1":267,"diffs":[[1,""]]},{"start1":3413,"length1":0,"diffs":[[1,"            case Direction.Left: break;\n                ;\n            case Direction.Right: break;\n                speed = -speed;\n            case Direction.Forward: break;\n                speed = -speed;\n            case Direction.Reverse: break;\n                ;\n"]]},{"start1":3690,"length1":20,"diffs":[[1,"        return speed\n"]]},{"start1":4134,"length1":120,"diffs":[[1,""]]},{"start1":4140,"length1":626,"diffs":[[1,""]]},{"start1":4718,"length1":38,"diffs":[[1,""]]},{"start1":4809,"length1":38,"diffs":[[1,""]]},{"start1":4841,"length1":251,"diffs":[[1,""]]}]}]},{"timestamp":1752682052674,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1085,"length1":16,"diffs":[[1,""]]},{"start1":1158,"length1":80,"diffs":[[1,"    function mfl(dir: Direction, speed: number, bend: number) {\n        if (SWAPDIR[Motors.frontLeft])\n            speed = -speed\n        switch (dir) {\n            case Direction.Forward: break;\n                ;\n            case Direction.Reverse: break;\n                speed = -speed;\n            case Direction.Left: break;\n                speed = -speed;\n            case Direction.Right: break;\n                ;\n            case Direction.Clockwise:\n                ;\n                break;\n            case Direction.Anticlockwise:\n                speed = -speed;\n                break;\n        }\n        MFL = speed\n"]]},{"start1":1791,"length1":0,"diffs":[[1,"    function mfr(dir: Direction, speed: number, bend: number) {\n        if (SWAPDIR[Motors.frontRight])\n            speed = -speed\n        switch (dir) {\n            case Direction.Forward: break;\n                ;\n            case Direction.Reverse: break;\n                speed = -speed;\n            case Direction.Left: break;\n                ;\n            case Direction.Right: break;\n                speed = -speed;\n            case Direction.Clockwise:\n                speed = -speed;\n                break;\n            case Direction.Anticlockwise:\n                ;\n                break;\n        }\n        MFR = speed\n    }\n\n    function mrl(dir: Direction, speed: number, bend: number) {\n        if (SWAPDIR[Motors.rearLeft])\n            speed = -speed\n        switch (dir) {\n            case Direction.Forward: break;\n                speed = -speed;\n            case Direction.Reverse: break;\n                ;\n            case Direction.Left: break;\n                speed = -speed;\n            case Direction.Right: break;\n                ;\n            case Direction.Clockwise:\n                speed = -speed;\n                break;\n            case Direction.Anticlockwise:\n                ;\n                break;\n        }\n        MRL = speed\n    }\n\n    function mrr(dir: Direction, speed: number, bend: number) {\n        if (SWAPDIR[Motors.rearRight])\n            speed = -speed\n        switch (dir) {\n            case Direction.Forward: break;\n                speed = -speed;\n            case Direction.Reverse: break;\n                ;\n            case Direction.Left: break;\n                ;\n            case Direction.Right: break;\n                speed = -speed;\n            case Direction.Clockwise:\n                ;\n                break;\n            case Direction.Anticlockwise:\n                speed = -speed;\n                break;\n        }\n        MRR = speed\n    }\n\n"]]},{"start1":4520,"length1":19,"diffs":[[1,"        return MFL\n"]]},{"start1":4675,"length1":19,"diffs":[[1,"        return MFL\n"]]},{"start1":4833,"length1":19,"diffs":[[1,"        return MFL\n"]]}]}]},{"timestamp":1752682647551,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":538,"length1":20,"diffs":[[1,"        Anticlockwise,\n"]]},{"start1":1038,"length1":438,"diffs":[[1,"    let SWAPDIR = [false, false, false, false]\n    let SWAPMFL\n"]]},{"start1":1174,"length1":0,"diffs":[[1,"    function forward(motor:Motors, speed: number, bend: number) {\n        if ()\n    }\n\n"]]},{"start1":1410,"length1":41,"diffs":[[1,"        SWAPDIR[motor] = !SWAPDIR[motor]\n"]]},{"start1":1677,"length1":452,"diffs":[[1,"        mfl(dir, speed, bend)\n        mfr(dir, speed, bend)\n        mrl(dir, speed, bend)\n        mrr(dir, speed, bend)\n"]]}]}]},{"timestamp":1752683248724,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2371,"length1":48,"diffs":[[1,"        MFL = (swap[Motors.frontLeft ? -])\n"]]}]}]},{"timestamp":1752683250270,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1190,"length1":327,"diffs":[[1,"    let SWAPFRW = [false, false, false, false]\n    let SWAPREV = [false, false, false, false]\n    let SWAPLFT = [false, false, false, false]\n    let SWAPRGT = [false, false, false, false]\n    let SWAPCLW = [false, false, false, false]\n    let SWAPACW = [false, false, false, false]\n"]]},{"start1":1473,"length1":64,"diffs":[[1,"    let MFL = 100\n    let MFR = 100\n    let MRL = 100\n    let MRR = 100\n"]]},{"start1":1962,"length1":48,"diffs":[[1,"        let swap = []\n"]]},{"start1":2066,"length1":295,"diffs":[[1,"            case Direction.Reverse: swap = SWAPFRW; break;\n            case Direction.Left: swap = SWAPFRW; break;\n            case Direction.Right: swap = SWAPFRW; break;\n            case Direction.Clockwise: swap = SWAPFRW; break;\n            case Direction.AClockwise: swap = SWAPFRW; break;\n"]]},{"start1":2371,"length1":224,"diffs":[[1,"        MFL = (swap[Motors.frontLeft ? -speed])\n"]]},{"start1":4079,"length1":261,"diffs":[[1,""]]}]}]},{"timestamp":1752683843692,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1091,"length1":47,"diffs":[[1,"    let SWAPASS = [false, false, false, false]\n"]]},{"start1":1235,"length1":281,"diffs":[[1,"    let SWAPFRW = [false, true , false, true ]\n    let SWAPREV = [true , false, true , false]\n    let SWAPLFT = [true , false, false, true ]\n    let SWAPRGT = [false, true , true , false]\n    let SWAPCLW = [false, false, true , true ]\n    let SWAPACW = [true , true , false, false]\n"]]},{"start1":1732,"length1":41,"diffs":[[1,"        SWAPASS[motor] = !SWAPASS[motor]\n"]]},{"start1":2658,"length1":201,"diffs":[[1,""]]},{"start1":4379,"length1":37,"diffs":[[1,"    basic.showArrow(ArrowNames.West)\n"]]},{"start1":4510,"length1":37,"diffs":[[1,"    basic.showArrow(ArrowNames.East)\n"]]}]}]},{"timestamp":1752684403546,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1329,"length1":188,"diffs":[[1,"    let SWAPLFT = [true , true , false, true ]\n    let SWAPRGT = [false, true , false, false]\n    let SWAPCLW = [false, true , false, true ]\n    let SWAPACW = [true , false, true, false]\n"]]}]}]},{"timestamp":1752684842702,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1329,"length1":94,"diffs":[[1,"    let SWAPLFT = [false, true , false, true ]\n    let SWAPRGT = [true , false, true , false]\n"]]},{"start1":2490,"length1":70,"diffs":[[1,"        MFR = (swap[Motors.frontRight] ? -speed : speed)\n"]]},{"start1":2602,"length1":69,"diffs":[[1,"        MRR = (swap[Motors.rearRight] ? -speed : speed)\n"]]},{"start1":4010,"length1":60,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Forward, 15, 0)\n"]]},{"start1":4139,"length1":60,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Reverse, 15, 0)\n"]]},{"start1":4268,"length1":57,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Left, 15, 0)\n"]]},{"start1":4393,"length1":58,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Right, 15, 0)\n"]]},{"start1":4519,"length1":62,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Clockwise, 15, 0)\n"]]},{"start1":4649,"length1":63,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.AClockwise, 15, 0)\n"]]}]}]},{"timestamp":1752685415873,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":117,"length1":389,"diffs":[[1,""]]},{"start1":646,"length1":0,"diffs":[[1,"    export enum Motors {\n        //% block=\"front left\"\n        //% block.loc.nl=\"links voor\"\n        frontLeft,\n        //% block=\"front right\"\n        //% block.loc.nl=\"rechts voor\"\n        frontRight,\n        //% block=\"rear left\"\n        //% block.loc.nl=\"links achter\"\n        rearLeft,\n        //% block=\"rear right\"\n        //% block.loc.nl=\"rechts achter\"\n        rearRight\n    }\n"]]},{"start1":1035,"length1":198,"diffs":[[1,""]]},{"start1":2434,"length1":0,"diffs":[[1,"        MFL = (swap[Motors.frontLeft] ? -speed : speed)\n        MFR = (swap[Motors.frontRight] ? -speed : speed * bend / 100)\n        MRL = (swap[Motors.rearLeft] ? -speed : speed)\n        MRR = (swap[Motors.rearRight] ? -speed : speed * bend / 100)\n"]]},{"start1":2685,"length1":481,"diffs":[[1,""]]},{"start1":4036,"length1":61,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Forward, 15, 50)\n"]]},{"start1":4166,"length1":61,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Reverse, 15, 50)\n"]]},{"start1":4296,"length1":56,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Left, 15, 50)\n"]]},{"start1":4422,"length1":57,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Right, 15, 50)\n"]]},{"start1":4549,"length1":61,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Clockwise, 15, 50)\n"]]},{"start1":4680,"length1":62,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.AClockwise, 15, 50)\n"]]}]}]},{"timestamp":1752685990337,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1234,"length1":19,"diffs":[[1,""]]},{"start1":1979,"length1":353,"diffs":[[1,"    //% block=\"run %dir at %speed \\\\% while bending %bend \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed \\\\% snelheid en buig %bend \\\\% af\"\n    export function setDriving(dir: Direction, speed: number, bend: number) {\n"]]},{"start1":2634,"length1":233,"diffs":[[1,"        if (dir == Direction.Forward || dir == Direction.Reverse) {\n            MFL = (swap[Motors.frontLeft] ? -speed : speed * bend / 100)\n            MRL = (swap[Motors.rearLeft] ? -speed : speed * bend / 100)\n"]]},{"start1":4466,"length1":56,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Forward, 15, -50)\n"]]},{"start1":4597,"length1":56,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Reverse, 15, -50)\n"]]},{"start1":4728,"length1":53,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Left, 15, 0)\n"]]},{"start1":4853,"length1":54,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Right, 15, 0)\n"]]},{"start1":4979,"length1":58,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Clockwise, 15, 0)\n"]]},{"start1":5109,"length1":59,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.AClockwise, 15, 0)\n"]]}]}]},{"timestamp":1752686631639,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2873,"length1":13,"diffs":[[1,""]]}]}]},{"timestamp":1752686636420,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2873,"length1":640,"diffs":[[1,"            \n            MFL = (swap[Motors.frontLeft] ? -speed : speed * STEER / 100)\n            MRL = (swap[Motors.rearLeft] ? -speed : speed * STEER / 100)\n"]]},{"start1":3177,"length1":121,"diffs":[[1,""]]},{"start1":3187,"length1":0,"diffs":[[1,"        MFR = (swap[Motors.frontRight] ? -speed : speed)\n        MRR = (swap[Motors.rearRight] ? -speed : speed)\n"]]}]}]},{"timestamp":1752686748286,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":4756,"length1":2,"diffs":[[1,""]]}]}]},{"timestamp":1752687877707,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":4756,"length1":9,"diffs":[[1,""]]},{"start1":4757,"length1":0,"diffs":[[1,"\n"]]}]}]},{"timestamp":1752687879971,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":3057,"length1":129,"diffs":[[1,"                MFL = (swap[Motors.frontLeft] ? -speed : speed)\n                MRL = (swap[Motors.rearLeft] ? -speed : speed)\n"]]},{"start1":3344,"length1":157,"diffs":[[1,"                MFR = (swap[Motors.frontLeft] ? -speed : speed * STEER / 100)\n                MRR = (swap[Motors.rearLeft] ? -speed : speed * STEER / 100)\n"]]},{"start1":4756,"length1":41,"diffs":[[1,"CMecanum\n"]]},{"start1":5150,"length1":56,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Forward, 15)\n"]]},{"start1":5401,"length1":3,"diffs":[[1,"\n"]]},{"start1":5901,"length1":3,"diffs":[[1,"\n"]]}]}]},{"timestamp":1752688478098,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2133,"length1":26,"diffs":[[1,""]]},{"start1":2980,"length1":141,"diffs":[[1,"                MRL = (swap[Motors.rearLeft] ? -speed : speed * STEER / 100)\n                MFR = (swap[Motors.frontRight] ? -speed : speed)\n"]]},{"start1":3283,"length1":142,"diffs":[[1,"                MRL = (swap[Motors.rearLeft] ? -speed : speed)\n                MFR = (swap[Motors.frontRight] ? -speed : speed * STEER / 100)\n"]]},{"start1":5186,"length1":56,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Forward, 30)\n"]]},{"start1":5312,"length1":56,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Reverse, 15)\n"]]}]}]},{"timestamp":1752688757794,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":4785,"length1":41,"diffs":[[1,"CMecanum.steer(CMecanum.Steer.Right, 25)\n"]]},{"start1":5211,"length1":56,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Forward, 20)\n"]]},{"start1":5337,"length1":56,"diffs":[[1,"    CMecanum.setDriving(CMecanum.Direction.Reverse, 20)\n"]]}]}]},{"timestamp":1752689322650,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":3069,"length1":142,"diffs":[[1,"                MFR = (swap[Motors.frontRight] ? -speed : speed * STEER / 10)\n                MRR = (swap[Motors.rearRight] ? -speed : speed)\n"]]},{"start1":3385,"length1":143,"diffs":[[1,"                MFR = (swap[Motors.frontRight] ? -speed : speed)\n                MRR = (swap[Motors.rearRight] ? -speed : speed * STEER / 100)\n"]]},{"start1":4785,"length1":40,"diffs":[[1,"CMecanum.steer(CMecanum.Steer.Right, 50)\n"]]}]}]},{"timestamp":1752689886611,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2079,"length1":32,"diffs":[[1,""]]},{"start1":2313,"length1":34,"diffs":[[1,""]]},{"start1":2928,"length1":120,"diffs":[[1,"                MFL = (swap[Motors.frontLeft] ? -speed : speed * STEER / 100)\n"]]},{"start1":3069,"length1":129,"diffs":[[1,"                MFR = (swap[Motors.frontRight] ? -speed : speed)\n                MRR = (swap[Motors.rearRight] ? -speed : speed * STEER / 10)\n"]]},{"start1":3244,"length1":248,"diffs":[[1,"                MFL = (swap[Motors.frontLeft] ? -speed : speed)\n                MRL = (swap[Motors.rearLeft] ? -speed : speed * STEER / 100)\n                MFR = (swap[Motors.frontRight] ? -speed : speed) * STEER / 100\n"]]},{"start1":4785,"length1":42,"diffs":[[1,"CMecanum.steer(CMecanum.Steer.Left, 50)\n"]]}]}]},{"timestamp":1752690463870,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2165,"length1":51,"diffs":[[1,"        bend = 100 - bend\n        STEER = (dir == Steer.Left ? bend : -bend)\n"]]},{"start1":4908,"length1":41,"diffs":[[1,"//CMecanum.steer(CMecanum.Steer.Left, 50)\n"]]}]}]},{"timestamp":1752691037275,"editorVersion":"8.0.8","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":84,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":4749,"length1":0,"diffs":[[1,"\n// MAIN PROGRAM\n\n// instelling\nCMecanum.swapDirection(CMecanum.Motors.frontRight)\nCMecanum.swapDirection(CMecanum.Motors.rearLeft)\n\nCMecanum.steer(CMecanum.Steer.Right, 80)\n\nbasic.forever(function() {\n\n    while (!input.buttonIsPressed(Button.A)) {}\n\n    function go() {\n        neZha.setMotorSpeed(neZha.MotorList.M1, CMecanum.frontLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M2, CMecanum.frontRight())\n        neZha.setMotorSpeed(neZha.MotorList.M3, CMecanum.rearLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M4, CMecanum.rearRight())\n    }\n\n    CMecanum.setDriving(CMecanum.Direction.Forward, 15)\n    basic.showArrow(ArrowNames.North)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Reverse, 15)\n    basic.showArrow(ArrowNames.South)\n    go()\n    basic.pause(1000)\n/*\n    CMecanum.setDriving(CMecanum.Direction.Left, 15)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Right, 15)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Clockwise, 15)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.AClockwise, 15)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n*/\n    // stop\n    neZha.setMotorSpeed(neZha.MotorList.M1, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M2, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M3, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M4, 0)\n})\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":293,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests gaan hier; deze zal niet worden gecompileerd wanneer dit pakket wordt gebruikt als extensie.\n"}]}],"snapshots":[{"timestamp":1752674838071,"editorVersion":"8.0.8","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-nezha-mecanum\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1752676672975,"editorVersion":"8.0.8","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#00CC00\" icon=\"\\uf1f9\"\n//% block=\"Mecanum wheels\"\n//% block.loc.nl=\"Mecanum wielen\"\nnamespace CMecanum {\n\n    export enum Direction {\n        // block=\"forward\"\n        // block.loc.nl=\"vooruit\"\n        Forward,\n        // block=\"reverse\"\n        // block.loc.nl=\"achteruit\"\n        Reverse,\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right\n    }\n    export enum Motors {\n        //% block=\"motor 1\"\n        M1,\n        //% block=\"motor 2\"\n        M2,\n        //% block=\"motor 3\"\n        M3,\n        //% block=\"motor 4\"\n        M4\n    }\n\n    let SWAPDIR = [false, false, false, false]\n\n    function driveMotor(motor: Motors, speed: number) {\n        let iic_buffer = pins.createBuffer(4);\n        let neZha_address = 0x10\n\n        if (SWAPDIR[motor]) speed = -speed\n\n        iic_buffer[0] = motor + 1;\n        if (speed >= 0) {\n            iic_buffer[1] = 0x01;\n        }\n        else {\n            iic_buffer[1] = 0x02;\n            speed = -speed\n        }\n        iic_buffer[2] = speed;\n        iic_buffer[3] = 0;\n        pins.i2cWriteBuffer(neZha_address, iic_buffer);\n    }\n\n    //% block=\"Swap direction of %motor\"\n    //% block.loc.nl=\"Draai de richting om van %motor\"\n    export function swapDirection(motor: Motors) {\n        SWAPDIR[motor] = !SWAPDIR[motor]\n    }\n\n    //% block=\"run %dir at %speed %% while bending %bend \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed %% snelheid en buig %bend \\\\% af\"\n    export function drive(dir: Direction, speed: number, bend: number) {\n    }\n}","README.md":"","pxt.json":"{\n    \"name\": \"pxt-nezha-mecanum\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1752678529038,"editorVersion":"8.0.8","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#00CC00\" icon=\"\\uf1f9\"\n//% block=\"Mecanum wheels\"\n//% block.loc.nl=\"Mecanum wielen\"\nnamespace CMecanum {\n\n    export enum Direction {\n        // block=\"forward\"\n        // block.loc.nl=\"vooruit\"\n        Forward,\n        // block=\"reverse\"\n        // block.loc.nl=\"achteruit\"\n        Reverse,\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right\n    }\n    export enum Motors {\n        //% block=\"front left\"\n        //% block.loc.nl=\"links voor\"\n        M1,\n        //% block=\"front right\"\n        //% block.loc.nl=\"rechts voor\"\n        M2,\n        //% block=\"rear left\"\n        //% block.loc.nl=\"links achter\"\n        M3,\n        //% block=\"rear right\"\n        //% block.loc.nl=\"rechts achter\"\n        M4\n    }\n\n    let SWAPDIR = [false, false, false, false]\n    let DIR = Direction.Forward\n    let SPEED = 100\n    let BEND = 0\n\n    //% block=\"Swap the assembly of %motor\"\n    //% block.loc.nl=\"Draai de montage van %motor om\"\n    export function swapDirection(motor: Motors) {\n        SWAPDIR[motor] = !SWAPDIR[motor]\n    }\n\n    //% block=\"run %dir at %speed \\\\% while bending %bend \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed \\\\% snelheid en buig %bend \\\\% af\"\n    export function setDriving(dir: Direction, speed: number, bend: number) {\n        DIR = dir\n        SPEED = speed\n        BEND = bend\n    }\n\n    export function motor1() : number {\n        let speed : number\n        if (SWAPDIR[Motors.M1])\n            speed = -SPEED\n        else\n            speed = SPEED\n        if (DIR\n        return speed\n    }\n}","README.md":"","pxt.json":"{\n    \"name\": \"pxt-nezha-mecanum\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1752680330360,"editorVersion":"8.0.8","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#00CC00\" icon=\"\\uf1f9\"\n//% block=\"Mecanum wheels\"\n//% block.loc.nl=\"Mecanum wielen\"\nnamespace CMecanum {\n\n    export enum Direction {\n        // block=\"forward\"\n        // block.loc.nl=\"vooruit\"\n        Forward,\n        // block=\"reverse\"\n        // block.loc.nl=\"achteruit\"\n        Reverse,\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right,\n        // block=\"anti clockwise\"\n        // block.loc.nl=\"linksom\"\n        Anticlockwise,\n        // block=\"clockwise\"\n        // block.loc.nl=\"rechtsom\"\n        Clockwise\n    }\n    export enum Motors {\n        //% block=\"front left\"\n        //% block.loc.nl=\"links voor\"\n        frontLeft,\n        //% block=\"front right\"\n        //% block.loc.nl=\"rechts voor\"\n        frontRight,\n        //% block=\"rear left\"\n        //% block.loc.nl=\"links achter\"\n        rearLeft,\n        //% block=\"rear right\"\n        //% block.loc.nl=\"rechts achter\"\n        rearRight\n    }\n\n    let SWAPDIR = [false, false, false, false]\n    let DIR = Direction.Forward\n    let SPEED = 100\n    let BEND = 0\n\n    //% block=\"Swap the assembly of %motor\"\n    //% block.loc.nl=\"Draai de montage van %motor om\"\n    export function swapDirection(motor: Motors) {\n        SWAPDIR[motor] = !SWAPDIR[motor]\n    }\n\n    //% block=\"run %dir at %speed \\\\% while bending %bend \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed \\\\% snelheid en buig %bend \\\\% af\"\n    export function setDriving(dir: Direction, speed: number, bend: number) {\n        DIR = dir\n        SPEED = speed\n        BEND = bend\n    }\n\n    export function frontLeft(): number {\n        let speed: number\n        if (SWAPDIR[Motors.frontLeft])\n            speed = -SPEED\n        else\n            speed = SPEED\n        switch (DIR) {\n            case Direction.Forward:\n                ;\n                break;\n            case Direction.Reverse:\n                speed = -speed;\n                break;\n            case Direction.Left: break;\n                speed = -speed;\n            case Direction.Right: break;\n                ;\n            case Direction.Clockwise: break;\n                ;\n            case Direction.Anticlockwise: break;\n                speed = -speed;\n        }\n        return speed\n    }\n\n    export function frontRight(): number {\n        let speed: number\n        if (SWAPDIR[Motors.frontRight])\n            speed = -SPEED\n        else\n            speed = SPEED\n        switch (DIR) {\n            case Direction.Forward:\n                speed = -speed;\n                break;\n            case Direction.Reverse:\n                ;\n                break;\n            case Direction.Left: break;\n                ;\n            case Direction.Right: break;\n                speed = -speed;\n            case Direction.Clockwise: break;\n                ;\n            case Direction.Anticlockwise: break;\n                speed = -speed;\n        }\n        return speed\n    }\n\n    export function rearLeft(): number {\n        let speed: number\n        if (SWAPDIR[Motors.rearLeft])\n            speed = -SPEED\n        else\n            speed = SPEED\n        switch (DIR) {\n            case Direction.Forward:\n                speed = -speed;\n                break;\n            case Direction.Reverse:\n                ;\n                break;\n            case Direction.Left: break;\n                speed = -speed;\n            case Direction.Right: break;\n                ;\n            case Direction.Clockwise: break;\n                speed = -speed;\n            case Direction.Anticlockwise: break;\n                ;\n        }\n        return speed\n    }\n\n    export function rearRight(): number {\n        let speed: number\n        if (SWAPDIR[Motors.rearRight])\n            speed = -SPEED\n        else\n            speed = SPEED\n        switch (DIR) {\n            case Direction.Forward:\n                ;\n                break;\n            case Direction.Reverse:\n                speed = -speed;\n                break;\n            case Direction.Left: break;\n                ;\n            case Direction.Right: break;\n                speed = -speed;\n            case Direction.Clockwise: break;\n                speed = -speed;\n            case Direction.Anticlockwise: break;\n                ;\n        }\n        return speed\n    }\n}\n\n// instelling\nCMecanum.swapDirection(CMecanum.Motors.frontRight)\nCMecanum.swapDirection(CMecanum.Motors.rearLeft)\n\nfunction go() {\n    neZha.setMotorSpeed(neZha.MotorList.M1, CMecanum.frontLeft())\n    neZha.setMotorSpeed(neZha.MotorList.M2, CMecanum.frontRight())\n    neZha.setMotorSpeed(neZha.MotorList.M3, CMecanum.rearLeft())\n    neZha.setMotorSpeed(neZha.MotorList.M4, CMecanum.rearRight())\n}\n\n// vooruit\nCMecanum.setDriving(CMecanum.Direction.Forward, 15, 0)\ngo()\nbasic.pause(1000)\n// stop\nneZha.setMotorSpeed(neZha.MotorList.M1, 0)\nneZha.setMotorSpeed(neZha.MotorList.M2, 0)\nneZha.setMotorSpeed(neZha.MotorList.M3, 0)\nneZha.setMotorSpeed(neZha.MotorList.M4, 0)\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-mecanum\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-nezha\": \"github:elecfreaks/pxt-nezha#v1.3.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1752682166718,"editorVersion":"8.0.8","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#00CC00\" icon=\"\\uf1f9\"\n//% block=\"Mecanum wheels\"\n//% block.loc.nl=\"Mecanum wielen\"\nnamespace CMecanum {\n\n    export enum Direction {\n        // block=\"forward\"\n        // block.loc.nl=\"vooruit\"\n        Forward,\n        // block=\"reverse\"\n        // block.loc.nl=\"achteruit\"\n        Reverse,\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right,\n        // block=\"anti clockwise\"\n        // block.loc.nl=\"linksom\"\n        Anticlockwise,\n        // block=\"clockwise\"\n        // block.loc.nl=\"rechtsom\"\n        Clockwise\n    }\n    export enum Motors {\n        //% block=\"front left\"\n        //% block.loc.nl=\"links voor\"\n        frontLeft,\n        //% block=\"front right\"\n        //% block.loc.nl=\"rechts voor\"\n        frontRight,\n        //% block=\"rear left\"\n        //% block.loc.nl=\"links achter\"\n        rearLeft,\n        //% block=\"rear right\"\n        //% block.loc.nl=\"rechts achter\"\n        rearRight\n    }\n\n    let SWAPDIR = [false, false, false, false]\n    let MFL = 100\n    let MFR = 100\n    let MRL = 100\n    let MRR = 100\n\n    function mfl(dir: Direction, speed: number, bend: number) {\n        if (SWAPDIR[Motors.frontLeft])\n            speed = -speed\n        switch (dir) {\n            case Direction.Forward: break;\n                ;\n            case Direction.Reverse: break;\n                speed = -speed;\n            case Direction.Left: break;\n                speed = -speed;\n            case Direction.Right: break;\n                ;\n            case Direction.Clockwise:\n                ;\n                break;\n            case Direction.Anticlockwise:\n                speed = -speed;\n                break;\n        }\n        MFL = speed\n    }\n\n    function mfr(dir: Direction, speed: number, bend: number) {\n        if (SWAPDIR[Motors.frontRight])\n            speed = -speed\n        switch (dir) {\n            case Direction.Forward: break;\n                ;\n            case Direction.Reverse: break;\n                speed = -speed;\n            case Direction.Left: break;\n                ;\n            case Direction.Right: break;\n                speed = -speed;\n            case Direction.Clockwise:\n                speed = -speed;\n                break;\n            case Direction.Anticlockwise:\n                ;\n                break;\n        }\n        MFR = speed\n    }\n\n    function mrl(dir: Direction, speed: number, bend: number) {\n        if (SWAPDIR[Motors.rearLeft])\n            speed = -speed\n        switch (dir) {\n            case Direction.Forward: break;\n                speed = -speed;\n            case Direction.Reverse: break;\n                ;\n            case Direction.Left: break;\n                speed = -speed;\n            case Direction.Right: break;\n                ;\n            case Direction.Clockwise:\n                speed = -speed;\n                break;\n            case Direction.Anticlockwise:\n                ;\n                break;\n        }\n        MRL = speed\n    }\n\n    function mrr(dir: Direction, speed: number, bend: number) {\n        if (SWAPDIR[Motors.rearRight])\n            speed = -speed\n        switch (dir) {\n            case Direction.Forward: break;\n                speed = -speed;\n            case Direction.Reverse: break;\n                ;\n            case Direction.Left: break;\n                ;\n            case Direction.Right: break;\n                speed = -speed;\n            case Direction.Clockwise:\n                ;\n                break;\n            case Direction.Anticlockwise:\n                speed = -speed;\n                break;\n        }\n        MRR = speed\n    }\n\n    //% block=\"Swap the assembly of %motor\"\n    //% block.loc.nl=\"Draai de montage van %motor om\"\n    export function swapDirection(motor: Motors) {\n        SWAPDIR[motor] = !SWAPDIR[motor]\n    }\n\n    //% block=\"run %dir at %speed \\\\% while bending %bend \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed \\\\% snelheid en buig %bend \\\\% af\"\n    export function setDriving(dir: Direction, speed: number, bend: number) {\n        mfl(dir, speed, bend)\n        mfr(dir, speed, bend)\n        mrl(dir, speed, bend)\n        mrr(dir, speed, bend)\n    }\n\n    //% block=\"speed front left wheel\"\n    //% block.loc.nl=\"snelheid linker voorwiel\"\n    export function frontLeft(): number {\n        return MFL\n    }\n\n    //% block=\"speed front right wheel\"\n    //% block.loc.nl=\"snelheid rechter voorwiel\"\n    export function frontRight(): number {\n        return MFL\n    }\n\n    //% block=\"speed rear left wheel\"\n    //% block.loc.nl=\"snelheid linker achterwiel\"\n    export function rearLeft(): number {\n        return MFL\n    }\n\n    //% block=\"speed rear right wheel\"\n    //% block.loc.nl=\"snelheid rechter achterwiel\"\n    export function rearRight(): number {\n        return MFL\n    }\n}\n\n// MAIN PROGRAM\n\n// instelling\nCMecanum.swapDirection(CMecanum.Motors.frontRight)\nCMecanum.swapDirection(CMecanum.Motors.rearLeft)\n\nbasic.forever(function() {\n\n    while (!input.buttonIsPressed(Button.A)) {}\n\n    function go() {\n        neZha.setMotorSpeed(neZha.MotorList.M1, CMecanum.frontLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M2, CMecanum.frontRight())\n        neZha.setMotorSpeed(neZha.MotorList.M3, CMecanum.rearLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M4, CMecanum.rearRight())\n    }\n\n    CMecanum.setDriving(CMecanum.Direction.Forward, 15, 0)\n    basic.showArrow(ArrowNames.North)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Reverse, 15, 0)\n    basic.showArrow(ArrowNames.South)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Left, 15, 0)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Right, 15, 0)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    // stop\n    neZha.setMotorSpeed(neZha.MotorList.M1, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M2, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M3, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M4, 0)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-mecanum\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-nezha\": \"github:elecfreaks/pxt-nezha#v1.3.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1752684018637,"editorVersion":"8.0.8","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#00CC00\" icon=\"\\uf1f9\"\n//% block=\"Mecanum wheels\"\n//% block.loc.nl=\"Mecanum wielen\"\nnamespace CMecanum {\n\n    export enum Direction {\n        // block=\"forward\"\n        // block.loc.nl=\"vooruit\"\n        Forward,\n        // block=\"reverse\"\n        // block.loc.nl=\"achteruit\"\n        Reverse,\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right,\n        // block=\"anti clockwise\"\n        // block.loc.nl=\"linksom\"\n        AClockwise,\n        // block=\"clockwise\"\n        // block.loc.nl=\"rechtsom\"\n        Clockwise\n    }\n    export enum Motors {\n        //% block=\"front left\"\n        //% block.loc.nl=\"links voor\"\n        frontLeft,\n        //% block=\"front right\"\n        //% block.loc.nl=\"rechts voor\"\n        frontRight,\n        //% block=\"rear left\"\n        //% block.loc.nl=\"links achter\"\n        rearLeft,\n        //% block=\"rear right\"\n        //% block.loc.nl=\"rechts achter\"\n        rearRight\n    }\n\n    // swap the motor direction because of the assembly\n    let SWAPASS = [false, false, false, false]\n\n    // swap the motor speed based on the direction\n    //              mfl    mfr    mrl    mrr\n    let SWAPFRW = [false, true , false, true ]\n    let SWAPREV = [true , false, true , false]\n    let SWAPLFT = [true , false, false, true ]\n    let SWAPRGT = [false, true , true , false]\n    \n    let SWAPCLW = [false, false, true , true ]\n    let SWAPACW = [true , true , false, false]\n\n    let MFL = 0\n    let MFR = 0\n    let MRL = 0\n    let MRR = 0\n\n    //% block=\"Swap the assembly of %motor\"\n    //% block.loc.nl=\"Draai de montage van %motor om\"\n    export function swapDirection(motor: Motors) {\n        SWAPASS[motor] = !SWAPASS[motor]\n    }\n\n    //% block=\"run %dir at %speed \\\\% while bending %bend \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed \\\\% snelheid en buig %bend \\\\% af\"\n    export function setDriving(dir: Direction, speed: number, bend: number) {\n        let swap = [false, false, false, false]\n        switch (dir) {\n            case Direction.Forward: swap = SWAPFRW; break;\n            case Direction.Reverse: swap = SWAPREV; break;\n            case Direction.Left: swap = SWAPLFT; break;\n            case Direction.Right: swap = SWAPRGT; break;\n            case Direction.Clockwise: swap = SWAPCLW; break;\n            case Direction.AClockwise: swap = SWAPACW; break;\n        }\n        MFL = (swap[Motors.frontLeft] ? -speed : speed)\n        MFR = (swap[Motors.frontRight] ? -speed : speed)\n        MRL = (swap[Motors.rearLeft] ? -speed : speed)\n        MRR = (swap[Motors.rearRight] ? -speed : speed)\n    }\n\n    //% block=\"speed front left wheel\"\n    //% block.loc.nl=\"snelheid linker voorwiel\"\n    export function frontLeft(): number {\n        return MFL\n    }\n\n    //% block=\"speed front right wheel\"\n    //% block.loc.nl=\"snelheid rechter voorwiel\"\n    export function frontRight(): number {\n        return MFR\n    }\n\n    //% block=\"speed rear left wheel\"\n    //% block.loc.nl=\"snelheid linker achterwiel\"\n    export function rearLeft(): number {\n        return MRL\n    }\n\n    //% block=\"speed rear right wheel\"\n    //% block.loc.nl=\"snelheid rechter achterwiel\"\n    export function rearRight(): number {\n        return MRR\n    }\n}\n\n// MAIN PROGRAM\n\n// instelling\nCMecanum.swapDirection(CMecanum.Motors.frontRight)\nCMecanum.swapDirection(CMecanum.Motors.rearLeft)\n\nbasic.forever(function() {\n\n    while (!input.buttonIsPressed(Button.A)) {}\n\n    function go() {\n        neZha.setMotorSpeed(neZha.MotorList.M1, CMecanum.frontLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M2, CMecanum.frontRight())\n        neZha.setMotorSpeed(neZha.MotorList.M3, CMecanum.rearLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M4, CMecanum.rearRight())\n    }\n\n    CMecanum.setDriving(CMecanum.Direction.Forward, 15, 0)\n    basic.showArrow(ArrowNames.North)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Reverse, 15, 0)\n    basic.showArrow(ArrowNames.South)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Left, 15, 0)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Right, 15, 0)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Clockwise, 15, 0)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.AClockwise, 15, 0)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n\n    // stop\n    neZha.setMotorSpeed(neZha.MotorList.M1, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M2, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M3, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M4, 0)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-mecanum\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-nezha\": \"github:elecfreaks/pxt-nezha#v1.3.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1752685920032,"editorVersion":"8.0.8","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#00CC00\" icon=\"\\uf1f9\"\n//% block=\"Mecanum wheels\"\n//% block.loc.nl=\"Mecanum wielen\"\nnamespace CMecanum {\n\n    export enum Direction {\n        // block=\"forward\"\n        // block.loc.nl=\"vooruit\"\n        Forward,\n        // block=\"reverse\"\n        // block.loc.nl=\"achteruit\"\n        Reverse,\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right,\n        // block=\"anti clockwise\"\n        // block.loc.nl=\"linksom\"\n        AClockwise,\n        // block=\"clockwise\"\n        // block.loc.nl=\"rechtsom\"\n        Clockwise\n    }\n    export enum Motors {\n        //% block=\"front left\"\n        //% block.loc.nl=\"links voor\"\n        frontLeft,\n        //% block=\"front right\"\n        //% block.loc.nl=\"rechts voor\"\n        frontRight,\n        //% block=\"rear left\"\n        //% block.loc.nl=\"links achter\"\n        rearLeft,\n        //% block=\"rear right\"\n        //% block.loc.nl=\"rechts achter\"\n        rearRight\n    }\n\n    // swap the motor direction because of the assembly\n    let SWAPASM = [false, false, false, false]\n\n    // swap the motor speed based on the direction\n    //              mfl    mfr    mrl    mrr\n    let SWAPFRW = [false, false, true , true ]\n    let SWAPREV = [true , true , false, false]\n    let SWAPLFT = [true , true , true , true ]\n    let SWAPRGT = [false, false, false, false]\n    let SWAPCLW = [false, true , true , false]\n    let SWAPACW = [true , false, false, true ]\n\n    let MFL = 0\n    let MFR = 0\n    let MRL = 0\n    let MRR = 0\n\n    //% block=\"Swap the assembly of %motor\"\n    //% block.loc.nl=\"Draai de montage van %motor om\"\n    export function swapDirection(motor: Motors) {\n        SWAPASM[motor] = !SWAPASM[motor]\n    }\n\n    //% block=\"run %dir at %speed \\\\% while bending %bend \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed \\\\% snelheid en buig %bend \\\\% af\"\n    export function setDriving(dir: Direction, speed: number, bend: number) {\n        let swap = [false, false, false, false]\n        switch (dir) {\n            case Direction.Forward: swap = SWAPFRW; break;\n            case Direction.Reverse: swap = SWAPREV; break;\n            case Direction.Left: swap = SWAPLFT; break;\n            case Direction.Right: swap = SWAPRGT; break;\n            case Direction.Clockwise: swap = SWAPCLW; break;\n            case Direction.AClockwise: swap = SWAPACW; break;\n        }\n\n        if (dir == Direction.Forward || dir == Direction.Reverse) {\n            MFL = (swap[Motors.frontLeft] ? -speed : speed * bend / 100)\n            MRL = (swap[Motors.rearLeft] ? -speed : speed * bend / 100)\n        }\n        else {\n            MFL = (swap[Motors.frontLeft] ? -speed : speed)\n            MRL = (swap[Motors.rearLeft] ? -speed : speed)\n        }\n        MFR = (swap[Motors.frontRight] ? -speed : speed)\n        MRR = (swap[Motors.rearRight] ? -speed : speed)\n\n        if (SWAPASM[Motors.frontLeft]) MFL = -MFL\n        if (SWAPASM[Motors.frontRight]) MFR = -MFR\n        if (SWAPASM[Motors.rearLeft]) MRL = -MRL\n        if (SWAPASM[Motors.rearRight]) MRR = -MRR\n    }\n\n    //% block=\"speed front left wheel\"\n    //% block.loc.nl=\"snelheid linker voorwiel\"\n    export function frontLeft(): number {\n        return MFL\n    }\n\n    //% block=\"speed front right wheel\"\n    //% block.loc.nl=\"snelheid rechter voorwiel\"\n    export function frontRight(): number {\n        return MFR\n    }\n\n    //% block=\"speed rear left wheel\"\n    //% block.loc.nl=\"snelheid linker achterwiel\"\n    export function rearLeft(): number {\n        return MRL\n    }\n\n    //% block=\"speed rear right wheel\"\n    //% block.loc.nl=\"snelheid rechter achterwiel\"\n    export function rearRight(): number {\n        return MRR\n    }\n}\n\n// MAIN PROGRAM\n\n// instelling\nCMecanum.swapDirection(CMecanum.Motors.frontRight)\nCMecanum.swapDirection(CMecanum.Motors.rearLeft)\n\nbasic.forever(function() {\n\n    while (!input.buttonIsPressed(Button.A)) {}\n\n    function go() {\n        neZha.setMotorSpeed(neZha.MotorList.M1, CMecanum.frontLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M2, CMecanum.frontRight())\n        neZha.setMotorSpeed(neZha.MotorList.M3, CMecanum.rearLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M4, CMecanum.rearRight())\n    }\n\n    CMecanum.setDriving(CMecanum.Direction.Forward, 15, -50)\n    basic.showArrow(ArrowNames.North)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Reverse, 15, -50)\n    basic.showArrow(ArrowNames.South)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Left, 15, 0)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Right, 15, 0)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Clockwise, 15, 0)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.AClockwise, 15, 0)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n\n    // stop\n    neZha.setMotorSpeed(neZha.MotorList.M1, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M2, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M3, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M4, 0)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-mecanum\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-nezha\": \"github:elecfreaks/pxt-nezha#v1.3.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1752687877707,"editorVersion":"8.0.8","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#00CC00\" icon=\"\\uf1f9\"\n//% block=\"Mecanum wheels\"\n//% block.loc.nl=\"Mecanum wielen\"\nnamespace CMecanum {\n\n    export enum Motors {\n        //% block=\"front left\"\n        //% block.loc.nl=\"links voor\"\n        frontLeft,\n        //% block=\"front right\"\n        //% block.loc.nl=\"rechts voor\"\n        frontRight,\n        //% block=\"rear left\"\n        //% block.loc.nl=\"links achter\"\n        rearLeft,\n        //% block=\"rear right\"\n        //% block.loc.nl=\"rechts achter\"\n        rearRight\n    }\n\n    export enum Direction {\n        // block=\"forward\"\n        // block.loc.nl=\"vooruit\"\n        Forward,\n        // block=\"reverse\"\n        // block.loc.nl=\"achteruit\"\n        Reverse,\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right,\n        // block=\"anti clockwise\"\n        // block.loc.nl=\"linksom\"\n        AClockwise,\n        // block=\"clockwise\"\n        // block.loc.nl=\"rechtsom\"\n        Clockwise\n    }\n\n    export enum Steer {\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right\n     }\n\n    let STEER = 0\n\n    // swap the motor direction because of the assembly\n    let SWAPASM = [false, false, false, false]\n\n    // swap the motor speed based on the direction\n    //              mfl    mfr    mrl    mrr\n    let SWAPFRW = [false, false, true , true ]\n    let SWAPREV = [true , true , false, false]\n    let SWAPLFT = [true , true , true , true ]\n    let SWAPRGT = [false, false, false, false]\n    let SWAPCLW = [false, true , true , false]\n    let SWAPACW = [true , false, false, true ]\n\n    let MFL = 0\n    let MFR = 0\n    let MRL = 0\n    let MRR = 0\n\n    //% block=\"Swap the assembly of %motor\"\n    //% block.loc.nl=\"Draai de montage van %motor om\"\n    export function swapDirection(motor: Motors) {\n        SWAPASM[motor] = !SWAPASM[motor]\n    }\n\n    //% block=\"steer %bend \\\\% %dir\"\n    //% block.loc.nl=\"stuur %bend \\\\% %dir\"\n    export function steer(dir: Steer, bend: number) {\n        STEER = (dir == Steer.Left ? bend : -bend)\n    }\n\n    //% block=\"run %dir at %speed \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed \\\\% snelheid\"\n    export function setDriving(dir: Direction, speed: number) {\n        let swap = [false, false, false, false]\n        switch (dir) {\n            case Direction.Forward: swap = SWAPFRW; break;\n            case Direction.Reverse: swap = SWAPREV; break;\n            case Direction.Left: swap = SWAPLFT; break;\n            case Direction.Right: swap = SWAPRGT; break;\n            case Direction.Clockwise: swap = SWAPCLW; break;\n            case Direction.AClockwise: swap = SWAPACW; break;\n        }\n\n        if ((STEER != 0) && (dir == Direction.Forward || dir == Direction.Reverse)) {\n            if (STEER > 0) {\n                MFL = (swap[Motors.frontLeft] ? -speed : speed * STEER / 100)\n                MRL = (swap[Motors.rearLeft] ? -speed : speed * STEER / 100)\n                MFL = (swap[Motors.frontLeft] ? -speed : speed)\n                MRL = (swap[Motors.rearLeft] ? -speed : speed)\n            }\n            else {\n                MFL = (swap[Motors.frontLeft] ? -speed : speed)\n                MRL = (swap[Motors.rearLeft] ? -speed : speed)\n                MFR = (swap[Motors.frontLeft] ? -speed : speed * STEER / 100)\n                MRR = (swap[Motors.rearLeft] ? -speed : speed * STEER / 100)\n            }\n        }\n        else {\n            MFL = (swap[Motors.frontLeft] ? -speed : speed)\n            MRL = (swap[Motors.rearLeft] ? -speed : speed)\n            MFR = (swap[Motors.frontRight] ? -speed : speed)\n            MRR = (swap[Motors.rearRight] ? -speed : speed)\n        }\n\n        if (SWAPASM[Motors.frontLeft]) MFL = -MFL\n        if (SWAPASM[Motors.frontRight]) MFR = -MFR\n        if (SWAPASM[Motors.rearLeft]) MRL = -MRL\n        if (SWAPASM[Motors.rearRight]) MRR = -MRR\n    }\n\n    //% block=\"speed front left wheel\"\n    //% block.loc.nl=\"snelheid linker voorwiel\"\n    export function frontLeft(): number {\n        return MFL\n    }\n\n    //% block=\"speed front right wheel\"\n    //% block.loc.nl=\"snelheid rechter voorwiel\"\n    export function frontRight(): number {\n        return MFR\n    }\n\n    //% block=\"speed rear left wheel\"\n    //% block.loc.nl=\"snelheid linker achterwiel\"\n    export function rearLeft(): number {\n        return MRL\n    }\n\n    //% block=\"speed rear right wheel\"\n    //% block.loc.nl=\"snelheid rechter achterwiel\"\n    export function rearRight(): number {\n        return MRR\n    }\n}\n\n// MAIN PROGRAM\n\n// instelling\nCMecanum.swapDirection(CMecanum.Motors.frontRight)\nCMecanum.swapDirection(CMecanum.Motors.rearLeft)\n\nbasic.forever(function() {\n\n    while (!input.buttonIsPressed(Button.A)) {}\n\n    function go() {\n        neZha.setMotorSpeed(neZha.MotorList.M1, CMecanum.frontLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M2, CMecanum.frontRight())\n        neZha.setMotorSpeed(neZha.MotorList.M3, CMecanum.rearLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M4, CMecanum.rearRight())\n    }\n\n    CMecanum.setDriving(CMecanum.Direction.Forward, 15)\n    basic.showArrow(ArrowNames.North)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Reverse, 15)\n    basic.showArrow(ArrowNames.South)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Left, 15)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Right, 15)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Clockwise, 15)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.AClockwise, 15)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n\n    // stop\n    neZha.setMotorSpeed(neZha.MotorList.M1, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M2, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M3, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M4, 0)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-mecanum\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-nezha\": \"github:elecfreaks/pxt-nezha#v1.3.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1752689704302,"editorVersion":"8.0.8","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#00CC00\" icon=\"\\uf1f9\"\n//% block=\"Mecanum wheels\"\n//% block.loc.nl=\"Mecanum wielen\"\nnamespace CMecanum {\n\n    export enum Motors {\n        //% block=\"front left\"\n        //% block.loc.nl=\"links voor\"\n        frontLeft,\n        //% block=\"front right\"\n        //% block.loc.nl=\"rechts voor\"\n        frontRight,\n        //% block=\"rear left\"\n        //% block.loc.nl=\"links achter\"\n        rearLeft,\n        //% block=\"rear right\"\n        //% block.loc.nl=\"rechts achter\"\n        rearRight\n    }\n\n    export enum Direction {\n        // block=\"forward\"\n        // block.loc.nl=\"vooruit\"\n        Forward,\n        // block=\"reverse\"\n        // block.loc.nl=\"achteruit\"\n        Reverse,\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right,\n        // block=\"anti clockwise\"\n        // block.loc.nl=\"linksom\"\n        AClockwise,\n        // block=\"clockwise\"\n        // block.loc.nl=\"rechtsom\"\n        Clockwise\n    }\n\n    export enum Steer {\n        // block=\"to the left\"\n        // block.loc.nl=\"naar links\"\n        Left,\n        // block=\"to the right\"\n        // block.loc.nl=\"naar rechts\"\n        Right\n     }\n\n    let STEER = 0\n\n    // swap the motor direction because of the assembly\n    let SWAPASM = [false, false, false, false]\n\n    // swap the motor speed based on the direction\n    //              mfl    mfr    mrl    mrr\n    let SWAPFRW = [false, false, true , true ]\n    let SWAPREV = [true , true , false, false]\n    let SWAPLFT = [true , true , true , true ]\n    let SWAPRGT = [false, false, false, false]\n    let SWAPCLW = [false, true , true , false]\n    let SWAPACW = [true , false, false, true ]\n\n    let MFL = 0\n    let MFR = 0\n    let MRL = 0\n    let MRR = 0\n\n    //% block=\"Swap the assembly of %motor\"\n    //% block.loc.nl=\"Draai de montage van %motor om\"\n    export function swapDirection(motor: Motors) {\n        SWAPASM[motor] = !SWAPASM[motor]\n    }\n\n    //% block=\"steer %bend \\\\% %dir\"\n    //% block.loc.nl=\"stuur %bend \\\\% %dir\"\n    export function steer(dir: Steer, bend: number) {\n        bend = 100 - bend\n        STEER = (dir == Steer.Left ? bend : -bend)\n    }\n\n    //% block=\"run %dir at %speed \\\\%\"\n    //% block.loc.nl=\"rijd %dir met %speed \\\\% snelheid\"\n    export function setDriving(dir: Direction, speed: number) {\n        let swap = [false, false, false, false]\n        switch (dir) {\n            case Direction.Forward: swap = SWAPFRW; break;\n            case Direction.Reverse: swap = SWAPREV; break;\n            case Direction.Left: swap = SWAPLFT; break;\n            case Direction.Right: swap = SWAPRGT; break;\n            case Direction.Clockwise: swap = SWAPCLW; break;\n            case Direction.AClockwise: swap = SWAPACW; break;\n        }\n\n        if ((STEER != 0) && (dir == Direction.Forward || dir == Direction.Reverse)) {\n            if (STEER > 0) {\n                MFL = (swap[Motors.frontLeft] ? -speed : speed * STEER / 100)\n                MRL = (swap[Motors.rearLeft] ? -speed : speed)\n                MFR = (swap[Motors.frontRight] ? -speed : speed * STEER / 10)\n                MRR = (swap[Motors.rearRight] ? -speed : speed)\n            }\n            else {\n                MFL = (swap[Motors.frontLeft] ? -speed : speed)\n                MRL = (swap[Motors.rearLeft] ? -speed : speed * STEER / 100)\n                MFR = (swap[Motors.frontRight] ? -speed : speed)\n                MRR = (swap[Motors.rearRight] ? -speed : speed * STEER / 100)\n            }\n        }\n        else {\n            MFL = (swap[Motors.frontLeft] ? -speed : speed)\n            MRL = (swap[Motors.rearLeft] ? -speed : speed)\n            MFR = (swap[Motors.frontRight] ? -speed : speed)\n            MRR = (swap[Motors.rearRight] ? -speed : speed)\n        }\n\n        if (SWAPASM[Motors.frontLeft]) MFL = -MFL\n        if (SWAPASM[Motors.frontRight]) MFR = -MFR\n        if (SWAPASM[Motors.rearLeft]) MRL = -MRL\n        if (SWAPASM[Motors.rearRight]) MRR = -MRR\n    }\n\n    //% block=\"speed front left wheel\"\n    //% block.loc.nl=\"snelheid linker voorwiel\"\n    export function frontLeft(): number {\n        return MFL\n    }\n\n    //% block=\"speed front right wheel\"\n    //% block.loc.nl=\"snelheid rechter voorwiel\"\n    export function frontRight(): number {\n        return MFR\n    }\n\n    //% block=\"speed rear left wheel\"\n    //% block.loc.nl=\"snelheid linker achterwiel\"\n    export function rearLeft(): number {\n        return MRL\n    }\n\n    //% block=\"speed rear right wheel\"\n    //% block.loc.nl=\"snelheid rechter achterwiel\"\n    export function rearRight(): number {\n        return MRR\n    }\n}\n\n// MAIN PROGRAM\n\n// instelling\nCMecanum.swapDirection(CMecanum.Motors.frontRight)\nCMecanum.swapDirection(CMecanum.Motors.rearLeft)\n\nCMecanum.steer(CMecanum.Steer.Right, 50)\n\nbasic.forever(function() {\n\n    while (!input.buttonIsPressed(Button.A)) {}\n\n    function go() {\n        neZha.setMotorSpeed(neZha.MotorList.M1, CMecanum.frontLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M2, CMecanum.frontRight())\n        neZha.setMotorSpeed(neZha.MotorList.M3, CMecanum.rearLeft())\n        neZha.setMotorSpeed(neZha.MotorList.M4, CMecanum.rearRight())\n    }\n\n    CMecanum.setDriving(CMecanum.Direction.Forward, 15)\n    basic.showArrow(ArrowNames.North)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Reverse, 15)\n    basic.showArrow(ArrowNames.South)\n    go()\n    basic.pause(1000)\n/*\n    CMecanum.setDriving(CMecanum.Direction.Left, 15)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Right, 15)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.Clockwise, 15)\n    basic.showArrow(ArrowNames.East)\n    go()\n    basic.pause(1000)\n\n    CMecanum.setDriving(CMecanum.Direction.AClockwise, 15)\n    basic.showArrow(ArrowNames.West)\n    go()\n    basic.pause(1000)\n*/\n    // stop\n    neZha.setMotorSpeed(neZha.MotorList.M1, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M2, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M3, 0)\n    neZha.setMotorSpeed(neZha.MotorList.M4, 0)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-mecanum\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-nezha\": \"github:elecfreaks/pxt-nezha#v1.3.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1752691309980}